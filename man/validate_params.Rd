% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_params.R
\name{validate_params}
\alias{validate_params}
\title{Validate Common Parameters}
\usage{
validate_params(app_id, app_key, url_base, language, add)
}
\arguments{
\item{app_id}{\code{character(1)}. The user's application ID.}

\item{app_key}{\code{character(1)}. The user's application key.}

\item{url_base}{\code{character(1)}. The url stem for the API.}

\item{language}{\code{character(1)}. The language for which to look up 
domains.}

\item{add}{An object of class \code{assertCollection}.}
}
\value{
Returns a \code{character(1)} with the \code{language} code.
}
\description{
All of the API calls require the Application ID, Application 
  Key, and URL base.  Many of them also require a language designation.
  All of these may be set as global options, which the functions will
  reference.  These parameters are validated in each call. 
  \code{validate_params} allows the validations to be performed 
  consistently between functions, and avoids duplication of effort.
}
\details{
\code{validate_params} violates one commonly accepted best 
  practice in that it both creates side effects (potential errors) 
  \emph{and} returns a value.  Since the \code{language} argument is 
  matched against allowable values, it is necessary to return the 
  language so that the language code passed to the API call has 
  length 1.
}
\section{Functional Requirements}{

\enumerate{
 \item Cast an error if \code{app_id} is not \code{character(1)}.
 \item Cast an error if \code{app_id} is \code{NULL}.
 \item Cast an error if \code{app_key} is not \code{character(1)}.
 \item Cast an error if \code{app_key} is \code{NULL}.
 \item Cast an error if \code{language} is not \code{character(1)}.
 \item Cast an error if \code{url_base} is not \code{character(1)}.
 \item Cast an error if \code{url_base} is \code{NULL}
}
}

